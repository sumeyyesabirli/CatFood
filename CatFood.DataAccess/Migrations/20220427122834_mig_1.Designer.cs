// <auto-generated />
using System;
using CatFood.DataAccess.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace CatFood.DataAccess.Migrations
{
    [DbContext(typeof(EfDbContext))]
    [Migration("20220427122834_mig_1")]
    partial class mig_1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("CatFood.DataAccess.Entities.Cats", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("CatType")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Cats");
                });

            modelBuilder.Entity("CatFood.DataAccess.Entities.Foods", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("CatId")
                        .HasColumnType("integer");

                    b.Property<string>("FoodType")
                        .HasColumnType("text");

                    b.Property<int>("Gram")
                        .HasColumnType("integer");

                    b.Property<bool?>("Sterilised")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Time")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("CatId");

                    b.ToTable("Foods");
                });

            modelBuilder.Entity("CatFood.DataAccess.Entities.Foods", b =>
                {
                    b.HasOne("CatFood.DataAccess.Entities.Cats", "Cats")
                        .WithMany()
                        .HasForeignKey("CatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cats");
                });
#pragma warning restore 612, 618
        }
    }
}
